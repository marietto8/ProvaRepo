
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dosse
 */
public class GUI extends javax.swing.JFrame {

    private Ristorante r = new Ristorante();

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        caricaDati();
        popolaElenco();
    }

    private Prenotazione[] elencoCorrente = new Prenotazione[0];

    private void popolaElenco() {
        DefaultTableModel t = (DefaultTableModel) prenotazioni.getModel();
        while (t.getRowCount() > 0) {
            t.removeRow(0);
        }
        int nGiorni = switch (giorni.getSelectedIndex()) {
            case 0 ->
                1;
            case 1 ->
                7;
            default ->
                -1;
        };
        elencoCorrente = r.getPrenotazioni(nGiorni);
        for (Prenotazione p : elencoCorrente) {
            String orarioFormattato = p.getOrario().format(DateTimeFormatter.ofPattern("d MMM uuuu HH:mm"));
            t.addRow(new Object[]{orarioFormattato, p.getNome(), p.getnPersone(), p.getSala() == Prenotazione.SALA_INTERNA ? "Interna" : p.getSala() == Prenotazione.SALA_ESTERNA ? "Esterna" : "", p.getNote()});
        }
    }

    File f = new File("prenotazioni.dat");

    public void leggiDati() {
        ObjectOutputStream oos = null;
        try {
            oos = new ObjectOutputStream(new FileOutputStream(f));
        } catch (Exception e) {
            System.out.println("Errore di apertura file");
        }

        if (oos != null) {
            try {
                oos.writeObject(r);
                oos.writeObject(elencoCorrente);
                oos.flush();
            } catch (Exception e) {
            }
        }
        try {
            oos.close();
        } catch (Exception e) {
        }
    }

    public void caricaDati() {
        ObjectInputStream ois = null;

        try {
            ois = new ObjectInputStream(new FileInputStream(f));
        } catch (Exception e) {
            System.out.println("Errore di apertura file");
        }

        if (ois != null) {
            try {
                r = (Ristorante) ois.readObject();
                elencoCorrente = (Prenotazione[]) ois.readObject();
            } catch (Exception e) {
                System.out.println("Errore di apertura del file " + e);
            }
        }
        try {
            ois.close();
        } catch (Exception e) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        prenotazioni = new javax.swing.JTable();
        aggiungi = new javax.swing.JButton();
        elimina = new javax.swing.JButton();
        modifica = new javax.swing.JButton();
        giorni = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gestore prenotazioni");
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        jLabel1.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Prenotazioni");

        prenotazioni.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Data e ora", "Nome", "Persone", "Sala", "Note"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        prenotazioni.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(prenotazioni);

        aggiungi.setText("Aggiungi");
        aggiungi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aggiungiActionPerformed(evt);
            }
        });

        elimina.setText("Elimina");
        elimina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminaActionPerformed(evt);
            }
        });

        modifica.setText("Modifica");
        modifica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificaActionPerformed(evt);
            }
        });

        giorni.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1 giorno", "7 giorni", "Tutte" }));
        giorni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                giorniActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 758, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(aggiungi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(modifica)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(elimina))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(giorni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(giorni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aggiungi)
                    .addComponent(elimina)
                    .addComponent(modifica))
                .addContainerGap())
        );

        getContentPane().add(jPanel1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void giorniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_giorniActionPerformed
        popolaElenco();
    }//GEN-LAST:event_giorniActionPerformed

    private void aggiungiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aggiungiActionPerformed
        new EditorPrenotazione(this, true, null) {
            @Override
            public void onConferma(Prenotazione p) {
                r.aggiungiPrenotazione(p);
                leggiDati();
                popolaElenco();

            }

            @Override
            public void onAnnulla() {

            }
        }.setVisible(true);
    }//GEN-LAST:event_aggiungiActionPerformed

    private void modificaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificaActionPerformed
        int sel = prenotazioni.getSelectedRow();
        if (sel < 0) {
            return;
        }
        Prenotazione prenotazione = elencoCorrente[sel];
        if (prenotazione == null) {
            return;
        }
        new EditorPrenotazione(this, true, prenotazione) {
            @Override
            public void onConferma(Prenotazione p) {
                r.rimuoviPrenotazione(prenotazione);
                r.aggiungiPrenotazione(p);
                leggiDati();
                popolaElenco();
                
            }

            @Override
            public void onAnnulla() {

            }
        }.setVisible(true);
    }//GEN-LAST:event_modificaActionPerformed

    private void eliminaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminaActionPerformed
        int sel = prenotazioni.getSelectedRow();
        if (sel < 0) {
            return;
        }
        Prenotazione prenotazione = elencoCorrente[sel];
        if (prenotazione == null) {
            return;
        }
        if (JOptionPane.showConfirmDialog(rootPane, "Eliminare la prenotazione selezionata?", getTitle(), JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            r.rimuoviPrenotazione(prenotazione);
            leggiDati();
            popolaElenco();
        }
    }//GEN-LAST:event_eliminaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        System.setProperty("sun.java2d.uiScale", "2");

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aggiungi;
    private javax.swing.JButton elimina;
    private javax.swing.JComboBox<String> giorni;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modifica;
    private javax.swing.JTable prenotazioni;
    // End of variables declaration//GEN-END:variables
}
